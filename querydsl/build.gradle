plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'

	// QueryDSL 플러그인 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'study'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 쿼리 파라미터 확인
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

	// QueryDSL 라이브러리 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// QueryDSL 라이브러리 추가 끝
}

tasks.named('test') {
	useJUnitPlatform()
}


// QueryDSL 추가
def querydslDir = "src/main/generated/querydsl"

querydsl{
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets{
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations{
	querydsl.extendsFrom compileClasspath
}

clean {
	delete file('src/main/generated')
}
// QueryDSL 추가 끝